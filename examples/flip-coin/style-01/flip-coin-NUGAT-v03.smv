--- FOND planning using NuGAT (NuSMV 2.5.0)
--- Sebastian Sardina  - ssardina@gmail.com
--- October 2014
---
--- Version 3 - Like Version 2 but with Player 1 done in 2 Modules: det env + effect selection
--- 		STRONG PLAN WORKS VIA RECHABILITY SYNTHESIS
--- 	Strong plan via reachability: no plan (correct)
--- 	FOND planning via GR(1); we cannot state a fairness assumption. 

--- Env plays first, then plays controller thus completing a game state
--- 	controller needs to pick and then flip. Goal is to get heads
--- 	pick is deterministic (but needed, or otherwise flip is mandatory)
--- 	flip is non-deterministic: environment chooses heads or tails
--- 	action exec is modelled in two game transitions (3 game states):
--- 		1) controller chooses new action and env updates world wrt last effect
--- 		2) controller plays sync and env selects a legal non-det effect

--- MODULE FOR EFFECTS
MODULE effect(action)
VAR
        effect : {
                none,
                heads,
                tails,
                pick0,
                pick1
        };
INIT -- Initial state of the agent: no action and no effect: next choose action
        effect = none
TRANS -- selection of one effect for the action chosen
  case
    action = pick  : next(effect) in { pick0 };
    action = flip  : next(effect) in { heads, tails};
    TRUE : next(effect) = none;
  esac



--- MODULE FOR DETERMINISTIC DOMAIN (GIVEN DETERMINISTIC EFFECT)
MODULE domain(det_effect)
VAR
  coin_heads : boolean;
  holding : boolean;
INIT
  !coin_heads & !holding;
TRANS
  case
    det_effect = heads : next(coin_heads);
    det_effect = tails : next(!coin_heads);
    TRUE  : next(coin_heads) = coin_heads;
  esac
TRANS
  case
    det_effect = pick0 : next(holding);
    det_effect = pick1 : next(!holding);
    det_effect in {heads, tails} : next(!holding);
    TRUE  : next(holding) = holding;
  esac




GAME

--- NON-DETERMINISTIC ENVIRONMENT PLAYER
PLAYER_1
VAR
  dom : domain(eff.effect);
  eff : effect(action);


--- CONTROLLER PLAYER ENVIRONMENT
PLAYER_2
VAR
  action : {pick, wait, flip, sync};
  last_action : {pick, wait, flip};
INIT
  action != sync
TRANS --- remember last domain action
  case
      action != sync : next(last_action) = action;
      TRUE : next(last_action) = last_action;
  esac
TRANS --- sync is a non-op action to do the 3-step update: action-effect-update
  action = sync <-> next(action) != sync
TRANS --- action precondition: to flip, one has to be holding the coin
  action = flip -> dom.holding


-- check for a strong plan -- reachability goal
-- 	No strategy exists: flip can return tails forever
--	RESULT IS AS INTENDED
REACHTARGET PLAYER_2 (dom.coin_heads)

-- same as strong plan reachability target, check strong plan, no assumption whatsoever
-- 	No strategy exists: flip can return tails forever
--	RESULT IS AS INTENDED
GENREACTIVITY PLAYER_2 (TRUE) -> (dom.coin_heads)

-- in FOND planning we would like to state that the coin is fair
-- 	There should be a solution under fairness, but we cannot express fairness required
--	RESULT NOT AS INTENDED
GENREACTIVITY PLAYER_2 (action = flip -> eff.effect = heads, action = flip -> eff.effect = tails) -> (dom.coin_heads)

